// <auto-generated />
using System;
using BusinessLogic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessLogic.Data.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20231114023737_MigrationsOrdenCompra")]
    partial class MigrationsOrdenCompra
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Core.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Core.Entities.OrdenCompra.OrdenCompras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CorreoComprador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Envio")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("FechaOrdenCompra")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IdComprador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PagoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioEnvio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("OrdenCompras");
                });

            modelBuilder.Entity("Core.Entities.OrdenCompra.OrdenItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrdenComprasId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenComprasId");

                    b.ToTable("OrdenItem");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Imagen")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("MarcaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Core.Entities.OrdenCompra.OrdenCompras", b =>
                {
                    b.OwnsOne("Core.Entities.OrdenCompra.Direccion", "DireccionEnvio", b1 =>
                        {
                            b1.Property<int>("OrdenComprasId")
                                .HasColumnType("int");

                            b1.Property<string>("Ciudad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Departamento")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DireccionCalle")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrdenComprasId");

                            b1.ToTable("OrdenCompras");

                            b1.WithOwner()
                                .HasForeignKey("OrdenComprasId");
                        });

                    b.Navigation("DireccionEnvio");
                });

            modelBuilder.Entity("Core.Entities.OrdenCompra.OrdenItem", b =>
                {
                    b.HasOne("Core.Entities.OrdenCompra.OrdenCompras", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrdenComprasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Core.Entities.OrdenCompra.ProductoOrdenado", "ProductoOrdenado", b1 =>
                        {
                            b1.Property<int>("OrdenItemId")
                                .HasColumnType("int");

                            b1.Property<string>("ImagenUrl")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ProductoNombre")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ProductoOrdenadoId")
                                .HasColumnType("int");

                            b1.HasKey("OrdenItemId");

                            b1.ToTable("OrdenItem");

                            b1.WithOwner()
                                .HasForeignKey("OrdenItemId");
                        });

                    b.Navigation("ProductoOrdenado");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.HasOne("Core.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Core.Entities.OrdenCompra.OrdenCompras", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
